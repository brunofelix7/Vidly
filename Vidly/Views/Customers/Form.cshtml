@model Vidly.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Customer.Id == 0) {
    <h2>New Customer</h2>
} else {
    <h2>Edit Customer</h2>
}


@using (Html.BeginForm("Save", "Customers")) {

    <!-- Exibe os erros de validação -->
    @Html.ValidationSummary(true, "Please fix the following errors")

    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Name)
        @Html.TextBoxFor(c => c.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.MembershipTypeId)
        @Html.DropDownListFor(c => c.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "--Select--", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.MembershipTypeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Birthdate)
        @Html.TextBoxFor(c => c.Customer.Birthdate, "{0:d MM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Birthdate)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(c => c.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter?
        </label>
    </div>
    <br />
    @Html.HiddenFor(c => c.Customer.Id)
    
    <!-- Cria um token de seguança. Quando o usuário envia uma requisição ele compara o token vindo do form com o do cookie -->
    @Html.AntiForgeryToken()
    <button class="btn btn-primary" type="submit">Save</button>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")    
}